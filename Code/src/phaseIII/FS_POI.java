/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package phaseIII;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import static phaseIII.Login.city;
import static phaseIII.Login.state;
import javax.swing.AbstractButton;
import javax.swing.JCheckBox;
/**
 *
 * @author shuangliang
 */

public class FS_POI extends javax.swing.JPanel {
    private int flag1 =0;
    private int flag2=0;
    private int flag3=0;
    private int flag4=0;
    private Object[][] poi_table =null;
 
    /**
     * Creates new form FS_POI
     */
    public TestFrame frame;
    public myTable table;
    public Object[] column = {"Location Name","City","State","Zip code","Flagged?","Date Flagged"};

    public FS_POI(TestFrame f) {
        initComponents();
        frame = f;
        flag3=1;
        CCity.addItem("Not Selected");
        CState.addItem("Not Selected");
         for (int i=0;i<21;i++){
        CCity.addItem(city[i]);
        int isExisted =0;
        for (int j=0;j<i;j++){
            if(state[j].equals(state[i])){
                 isExisted =1;
            }
        }
        if(isExisted==0){
            CState.addItem(state[i]);
        }
        }
         flag3=0;
        ResultSet rs=DB_test.Get_POI();
        poiName.addItem("Not Selected");
        try{while(rs.next()){
        String poi_name=rs.getString("LocName");
        poiName.addItem(poi_name);
        }
        }catch(SQLException se){
             System.out.println("SQLException in Add_data_pt");
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        poiName = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        startDate = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        endDate = new javax.swing.JFormattedTextField();
        CCity = new javax.swing.JComboBox();
        CState = new javax.swing.JComboBox();
        zipCode = new javax.swing.JTextField();
        applyFilterButton = new javax.swing.JButton();
        resetFilterButton = new javax.swing.JButton();
        jDesktopPane9 = new javax.swing.JDesktopPane();
        jDesktopPane10 = new javax.swing.JDesktopPane();
        backButton = new javax.swing.JButton();
        isFlagged = new javax.swing.JCheckBox();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(600, 500));

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 101));
        jLabel1.setText("View POIs");

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel2.setText("POI Location Name");

        poiName.setPreferredSize(new java.awt.Dimension(55, 30));

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel3.setText("City");

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel4.setText("State");

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel5.setText("Zip Code");

        jLabel6.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel6.setText("Flagged?");

        jLabel7.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel7.setText("Date Flagged");

        startDate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        try {
            startDate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-##-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        startDate.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        jLabel8.setText("to");

        endDate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        try {
            endDate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-##-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        endDate.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        CCity.setPreferredSize(new java.awt.Dimension(55, 30));
        CCity.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CCityItemStateChanged(evt);
            }
        });

        CState.setPreferredSize(new java.awt.Dimension(55, 30));
        CState.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CStateItemStateChanged(evt);
            }
        });

        zipCode.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        applyFilterButton.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        applyFilterButton.setText("Apply Filter");
        applyFilterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyFilterButtonActionPerformed(evt);
            }
        });

        resetFilterButton.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        resetFilterButton.setText("Reset Filter");
        resetFilterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetFilterButtonActionPerformed(evt);
            }
        });

        jDesktopPane9.setLayout(null);

        jDesktopPane10.setLayout(null);

        backButton.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        backButton.setText("Back");
        backButton.setToolTipText("");
        backButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane9)
            .addComponent(jDesktopPane10, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(160, 160, 160)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(applyFilterButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(resetFilterButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4)))
                            .addComponent(jLabel6))
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(startDate, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(endDate, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(zipCode, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(CCity, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(poiName, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(CState, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(isFlagged))
                        .addGap(16, 16, 16)))
                .addGap(0, 32, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(242, 242, 242))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(267, 267, 267))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jDesktopPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addComponent(poiName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(zipCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(isFlagged)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(endDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(applyFilterButton)
                    .addComponent(resetFilterButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 123, Short.MAX_VALUE)
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jDesktopPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents
    private void clean_up(){
        flag3=1;
        CCity.removeAllItems();
        CState.removeAllItems();
        CCity.addItem("Not Selected");
        CState.addItem("Not Selected");
          for (int i=0;i<21;i++){
        CCity.addItem(city[i]);
        int isExisted =0;
        for (int j=0;j<i;j++){
            if(state[j].equals(state[i])){
                 isExisted =1;
            }
        }
        if(isExisted==0){
            CState.addItem(state[i]);
        }
        }
        flag3=0;
        ResultSet rs=DB_test.Get_POI();
        poiName.addItem("Not Selected");
        try{while(rs.next()){
        String poi_name=rs.getString("LocName");
        poiName.addItem(poi_name);
        }
        }catch(SQLException se){
             System.out.println("SQLException in Add_data_pt");
        }
        zipCode.setText("");
        startDate.setText("");
        endDate.setText("");
        
    }
    
    private void CCityItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CCityItemStateChanged
        if(flag3!=1){  
        if(flag2!=1){
        flag1=1;
        int tmp = CCity.getSelectedIndex();
        if(tmp!=-1){ 
        for (int i=0;i<21;i++){
            if (CCity.getSelectedItem().equals(city[i])){
                CState.setSelectedItem(state[i]);
            }
        }
        if(CCity.getSelectedItem().equals("Not Selected")){
            CState.setSelectedItem("Not Selected");
        }
        }
        flag1=0;
        }
        }
    }//GEN-LAST:event_CCityItemStateChanged

    private void CStateItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CStateItemStateChanged
       if(flag3!=1){
        if(flag1 !=1){
      flag2=1;
      CCity.removeAllItems();
       if(!CState.getSelectedItem().equals("Not Selected")){
        for (int i=0;i<21;i++){
            if (CState.getSelectedItem().equals(state[i])){
                CCity.addItem(city[i]);
            }
        }
      }else{
            CCity.addItem("Not Selected");
         for (int i=0;i<21;i++){
        CCity.addItem(city[i]);
         }
       }
     flag2=0;
      }
       }
    }//GEN-LAST:event_CStateItemStateChanged

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        frame.getContentPane().removeAll();
         frame.getContentPane().invalidate();
         frame.getContentPane().add(new City_Off_Func(frame));
         frame.getContentPane().revalidate();
         frame.pack();
    }//GEN-LAST:event_backButtonActionPerformed

    private void applyFilterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyFilterButtonActionPerformed
        // public POI (String name, Boolean flag, String DateFlagged, String Zipcode, String City, String State)
        //this.table.table.setVisible(true);
        String new_name = poiName.getSelectedItem().toString();
        String new_city = CCity.getSelectedItem().toString();
        String new_state= CState.getSelectedItem().toString();
        String new_zipCode=zipCode.getText();
        String new_startDate =startDate.getText();
        String new_endDate =endDate.getText();
        boolean flagornot = isFlagged.isSelected();
        int flag_tmp=1;
        if(new_name.equals("Not Selected")){
            new_name=null;
        }
        if(new_city.equals("Not Selected")){
            new_city=null;
        }
         if(new_state.equals("Not Selected")){
            new_state=null;
        }
         if(new_startDate.equals("    -  -  ")){
             new_startDate=null;
         }
         if(new_endDate.equals("    -  -  ")){
             new_endDate=null;
         }
         if(new_zipCode.equals("")){
             new_zipCode=null;
         }
         System.out.println(new_name);
        boolean isEmpty=true;
        //System.out.println(new_startDate==null);
        if((new_startDate!=null&& new_endDate==null)||(new_startDate==null && new_endDate!=null)){
            JOptionPane.showMessageDialog(null, "Please enter both the start date and the end date!");
            this.clean_up();
            flag_tmp=0;
        }else if(new_startDate==null && new_endDate==null){
            isEmpty = true;
        }else{
            isEmpty=false;
        }
        if(flag_tmp==1){
        POI new_POI = new POI(new_name,flagornot,new_startDate,new_zipCode,new_city,new_state); 
        try{
        poi_table=DB_test.View_POIs(new_POI, new_endDate, isEmpty);
       /* for(int i = 0; i<poi_table.length;i++){
            for(int j = 0; j<poi_table[0].length;j++){
                System.out.println("index "+ i+"and " +j + poi_table[i][j] );                      
            }
        }*/
        table = new myTable(poi_table,column,this,new int[]{60,320,500,100});
        this.table.table.repaint();
        }
        catch(SQLException se){
             System.out.println("SQLException in FS_POI");
           }
        }
        flag4=1;
    }//GEN-LAST:event_applyFilterButtonActionPerformed

public void update_FS_POI_GUI(String selected_loc){
         frame.getContentPane().removeAll();
         frame.getContentPane().invalidate();
         frame.getContentPane().add(new POI_detail(frame,selected_loc));
         frame.getContentPane().revalidate();
         frame.pack();
     }

    private void resetFilterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetFilterButtonActionPerformed
       this.clean_up();
      if(flag4==1){
       this.table.table.setVisible(false);
      }
    }//GEN-LAST:event_resetFilterButtonActionPerformed

  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox CCity;
    private javax.swing.JComboBox CState;
    private javax.swing.JButton applyFilterButton;
    private javax.swing.JButton backButton;
    private javax.swing.JFormattedTextField endDate;
    private javax.swing.JCheckBox isFlagged;
    private javax.swing.JDesktopPane jDesktopPane10;
    private javax.swing.JDesktopPane jDesktopPane9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JComboBox poiName;
    private javax.swing.JButton resetFilterButton;
    private javax.swing.JFormattedTextField startDate;
    private javax.swing.JTextField zipCode;
    // End of variables declaration//GEN-END:variables
}
